name: Release

on: push
  
jobs:
  build:
    name: Build and release
    runs-on: ubuntu-latest

    #if: github.event.pull_request.merged

    steps:
      - name: Compute next SemVer tag
        id: semver
        uses: happydemics/semver-release-action@master
        with:
          release_branch: master
          release_strategy: none
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.base_ref }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-region: eu-west-3

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          VERSION: ${{ steps.semver.outputs.tag }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: happydemics/dashboard
          IMAGE_TAG: ${{ inputs.CI_ACTION_REF_NAME_SLUG_SHORT }}
          DOCKER_BUILDKIT: 1
        run: |
          # Build a docker container and push it to ECR
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - run: make update_action
        env:
          VERSION: ${{ steps.semver.outputs.tag }}

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Release ${{ steps.semver.outputs.tag }}
          branch: master

      - name: Create release
        id: tag
        uses: happydemics/semver-release-action@master
        with:
          release_branch: master
          tag: ${{ steps.semver.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
